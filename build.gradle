plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
	id 'org.hidetake.ssh' version '2.10.1'
}

group = 'gg.boardgame'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

bootWar {
	archiveBaseName="bdgg"
	archiveVersion=version
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.apache.httpcomponents:httpclient:4.5.12'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'
	compile "org.springframework.boot:spring-boot-starter-data-jpa"
	testImplementation 'com.h2database:h2'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude module: 'junit'
	}
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
	testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'mysql:mysql-connector-java'
}

remotes {
	webServer {
		host = project.properties["publicHost"]
		user = project.properties["publicUser"]
		identity = file("keys/bdgg.pem")
		knownHosts = allowAnyHosts
	}
}

task deployWar(dependsOn: bootWar){
	def tomcatHome = project.properties["publicDir"]
	def warName = "ROOT"
	doLast {
		ssh.run {
			session(remotes.webServer) {
				println "Uploading new war"
				put from: war.archivePath.absolutePath, into: "${tomcatHome}/${warName}.war.new"

				println "removing old war"
				execute("rm ${tomcatHome}/${warName}.war")

				println "activating new war"
				execute("mv ${tomcatHome}/${warName}.war{.new,}")
			}
		}
	}
}

test {
	useJUnitPlatform()
}
